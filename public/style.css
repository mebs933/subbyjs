@keyframes moveGradient {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 100% 50%;
  }
}

body {
  --noise-opacity: 0.05; /* Adjust noise opacity */

  background: #4e4e4e;
  background-image: 
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"><filter id="noiseFilter"><feTurbulence type="fractalNoise" baseFrequency="0.02" numOctaves="2" stitchTiles="stitch" result="noise"/></filter><rect width="100%" height="100%" style="filter:url(%23noiseFilter);" fill="white" opacity="%22var(--noise-opacity)%22 /></svg>'), /* Noise texture */
    linear-gradient(270deg, #4e4e4e, #292929 15%, #1c1c2b 35%, #292929 55%, #4e4e4e); /* Broken black with dark purple */
  background-size: 100px 100px, 800% 800%; /* Larger size for more gradual gradient */
  animation: moveGradient 600s linear infinite; /* Very slow movement for the gradient */
  background-blend-mode: multiply;
}

.box {
  position: absolute;
  top: 50%;
  left: 50%;                                                                    
}

.object {
  display: flex;
  flex: 0 1 100%;
  justify-content: center;
  align-items: center;
  align-content: stretch;
}

.outline {
  display: block; /* changed from none to block */
  width: 60px;
  height: 60px;
  border-radius: 50%;
  border: 8px solid #b5a4a4;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 5; /* Below the button but above other content */
}

.recording .outline {
  display: block;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  border: 8px solid #b5a4a4;
  animation: pulse 3s;
  animation-timing-function: ease-out;
  animation-iteration-count: infinite;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.button {
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background: #50cddd;
  box-shadow: 0px 0px 80px #0084f9;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10; /* Same level as .box to ensure visibility */
}

.recording .button {
  background: #dd5050;
  box-shadow: 0px 0px 80px #f90000;
}

@keyframes pulse {
  0% {
    transform: scale(0);
    opacity: 0;
    border: 65px solid #000000;
  }
  50% {
    border: solid #ffffff;
    opacity: 0.8;
  }

  90% {
    transform: scale(3.2);
    opacity: 0.2;
    border: 3px solid #000000;
  }
  100% {
    transform: scale(3.3);
    opacity: 0;
    border: 1px solid #ffffff;
  }
}

#delayed {
  animation-delay: 1.5s;
}

#circlein {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: #6bd6e1;
  box-shadow: 0px -2px 15px #e0ff94;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10; /* Same level as .box to ensure visibility */
}

.recording #circlein {
  background: #e16b6b;
  box-shadow: 0px -2px 15px #e0ff94;
}

.mic-icon {
  height: 60px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 15; /* Above the button */
}

.transcript-box {
  font-family: 'Rubik', sans-serif;
  font-size: 3.2rem;
  font-weight: 400;
  text-transform: uppercase;
  text-align: center;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  max-height: 66vh;
  width: calc(100% - 40px);
  overflow-y: auto;
  background: rgba(255, 255, 255, 0.2); /* Adjust background opacity for glass effect */
  border: 1px solid rgba(255, 255, 255, 0.3); /* Lighter border for glass effect */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), /* Outer shadow for depth */
               inset 0 1px 2px rgba(255, 255, 255, 0.3); /* Inner shadow for depth */
  backdrop-filter: blur(10px); /* Increase blur for frosted glass effect */
  padding: 20px;
  border-radius: 15px; /* Slightly rounder corners */
  z-index: 100;
  scroll-behavior: smooth;
}

.transcript-box span {
  display: block;
  line-height: 1.25;
  padding: 1rem;
  color: white;
  background-color: rgba(0, 0, 0, 0.3);
  margin-bottom: 10px; /* Add space between spans if needed */
  border-radius: 10px; /* Rounded corners for each span */
}